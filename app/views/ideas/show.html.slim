- content_for :meta_tags do
  meta name=="og:title" value=@idea.title
  meta name=="og:description" value=@idea.headline
  meta name=="og:image" value==@idea.category.badge.url
  meta name=="og:type" value="cause"
.wrapper
  = render 'fork_idea'

  #show_idea data-id=@idea.id
    .header class=@idea.category.css_class
      .category= image_tag @idea.category.badge.url, :title => @idea.category.name
      .info
        h2 class=("editable" if @editable) data-attribute="title" data-raw=@idea.title data-maxlength=60
          = @idea.title
        .user
          = t('.user_html', :link => link_to(@idea.user.name, user_path(@idea.user)))
          - if @idea.parent
            = t('.parent_html', :link => link_to(@idea.parent.user.name, idea_path(@idea.parent)))
        .headline
          .quote “
          p class=("editable" if @editable) data-attribute="headline" data-raw=@idea.headline data-maxlength=140
            = @idea.headline
      .social
        .twitter_share= render :partial => 'shared/twitter_share'
        .fb_like= render :partial => 'shared/fb_like'
    .menu
      ul
        li
          a href="#description"
            = t('.menu.description')
        li
          a href="#have"
            = t('.menu.have')
        li
          a href="#need"
            = t('.menu.need')
        li
          a href="#versions"
            = t('.menu.versions')
      .fork_idea= link_to t('.fork_idea'), '#fork'
    .content
      .description
        .text
          h1= t('.menu.description')
          .attribute class=("editable" if @editable) data-attribute="description" data-raw=@idea.description data-raw-attribute="description_html"
            == @idea.description_html
        .info
          - if @editable
            .placeholder= t('.placeholders.description_html')
            = render 'formatting_tips'
          .comments= render :partial => 'shared/comments', :locals => { :url => "#{idea_url(@idea)}#description" }
      .have
        .text
          h1= t('.menu.have')
          .attribute class=("editable" if @editable) data-attribute="have" data-raw=@idea.have data-raw-attribute="have_html"
            == @idea.have_html
        .info
          - if @editable
            .placeholder= t('.placeholders.have_html')
            = render 'formatting_tips'
          .comments= render :partial => 'shared/comments', :locals => { :url => "#{idea_url(@idea)}#have" }
      .need
        .text
          h1= t('.menu.need')
          .attribute class=("editable" if @editable) data-attribute="need" data-raw=@idea.need data-raw-attribute="need_html"
            == @idea.need_html
        .info
          - if @editable
            .placeholder= t('.placeholders.need_html')
            = render 'formatting_tips'
          .comments= render :partial => 'shared/comments', :locals => { :url => "#{idea_url(@idea)}#need" }
      .versions
        .text
          h1= t('.versions.title')
          - if @versions.empty?
            em= t('.versions.empty.html', :link => link_to(t('.versions.empty.link'), '#fork'))
          - else
            ul
              - @versions.each do |version|
                li class=@idea.category.css_class
                  h1= link_to(version.title, idea_path(version))
                  .user= t('.versions.user_html', :link => link_to(version.user.name, user_path(version.user)))
                  .headline
                    .quote “
                    p= version.headline
                  - if @editable
                    .merge= link_to t('.versions.merge'), merge_idea_path(@idea, version)
                  .created_at= t('.versions.created_at', :created_at => l(version.created_at.to_date, :format => :short))
        .info
          .placeholder= t('.placeholders.versions_html')
    .footer
      .license= link_to image_tag('cc_by.png'), "http://creativecommons.org/licenses/by/3.0/br/", :target => :_blank

  = render 'shared/application_js'
  = javascript_include_tag 'views/ideas/fork'
  = javascript_include_tag 'views/ideas/show'
  = javascript_include_tag 'routers/ideas/show'
  javascript:
    app.forkIdeaView = new ForkIdeaView
    app.showIdeaView = new ShowIdeaView
    app.showIdeaRouter = new ShowIdeaRouter
    Backbone.history.start()
